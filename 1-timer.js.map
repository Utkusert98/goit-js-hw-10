{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// DOM elemanlarını seçiyoruz\nconst startBtn = document.querySelector('[data-start]');\nconst input = document.querySelector('#datetime-picker');\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\nlet countdownInterval = null;\nlet selectedDate = null;\n\n// Flatpickr'ı başlatıyoruz (flatpickr global olarak CDN'den yüklendi)\nflatpickr(input, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    selectedDate = selectedDates[0];\n    const now = new Date();\n\n    if (selectedDate <= now) {\n      alert('Lütfen gelecekte bir tarih seçin.');\n      startBtn.disabled = true;\n      return;\n    }\n\n    startBtn.disabled = false;\n  },\n});\n\nstartBtn.addEventListener('click', () => {\n  if (!selectedDate) return;\n\n  startBtn.disabled = true;\n  input.disabled = true;\n\n  countdownInterval = setInterval(() => {\n    const now = new Date();\n    const timeLeft = selectedDate - now;\n\n    if (timeLeft <= 0) {\n      clearInterval(countdownInterval);\n      updateDisplay(0, 0, 0, 0);\n      alert('Geri sayım tamamlandı!');\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(timeLeft);\n    updateDisplay(days, hours, minutes, seconds);\n  }, 1000);\n});\n\nfunction updateDisplay(days, hours, minutes, seconds) {\n  daysSpan.textContent = addLeadingZero(days);\n  hoursSpan.textContent = addLeadingZero(hours);\n  minutesSpan.textContent = addLeadingZero(minutes);\n  secondsSpan.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  return {\n    days: Math.floor(ms / day),\n    hours: Math.floor((ms % day) / hour),\n    minutes: Math.floor(((ms % day) % hour) / minute),\n    seconds: Math.floor((((ms % day) % hour) % minute) / second),\n  };\n}\n"],"names":["startBtn","input","daysSpan","hoursSpan","minutesSpan","secondsSpan","countdownInterval","selectedDate","selectedDates","timeLeft","updateDisplay","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"ssBACA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EAAoB,KACpBC,EAAe,KAGnB,UAAUN,EAAO,CACf,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQO,EAAe,CAIrB,GAHAD,EAAeC,EAAc,CAAC,EAG1BD,GAFQ,IAAI,KAES,CACvB,MAAM,mCAAmC,EACzCP,EAAS,SAAW,GACpB,MACD,CAEDA,EAAS,SAAW,EACrB,CACH,CAAC,EAEDA,EAAS,iBAAiB,QAAS,IAAM,CAClCO,IAELP,EAAS,SAAW,GACpBC,EAAM,SAAW,GAEjBK,EAAoB,YAAY,IAAM,CAEpC,MAAMG,EAAWF,EADL,IAAI,KAGhB,GAAIE,GAAY,EAAG,CACjB,cAAcH,CAAiB,EAC/BI,EAAc,EAAG,EAAG,EAAG,CAAC,EACxB,MAAM,wBAAwB,EAC9B,MACD,CAED,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAQ,EAC5DC,EAAcC,EAAMC,EAAOC,EAASC,CAAO,CAC5C,EAAE,GAAI,EACT,CAAC,EAED,SAASJ,EAAcC,EAAMC,EAAOC,EAASC,EAAS,CACpDZ,EAAS,YAAcc,EAAeL,CAAI,EAC1CR,EAAU,YAAca,EAAeJ,CAAK,EAC5CR,EAAY,YAAcY,EAAeH,CAAO,EAChDR,EAAY,YAAcW,EAAeF,CAAO,CAClD,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUG,EAAI,CAMrB,MAAO,CACL,KAAM,KAAK,MAAMA,EAAK,KAAG,EACzB,MAAO,KAAK,MAAOA,EAAK,MAAO,IAAI,EACnC,QAAS,KAAK,MAAQA,EAAK,MAAO,KAAQ,GAAM,EAChD,QAAS,KAAK,MAASA,EAAK,MAAO,KAAQ,IAAU,GAAM,CAC/D,CACA"}